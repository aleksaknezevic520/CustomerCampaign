//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RewardService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddCustomerRewardRq", Namespace="http://schemas.datacontract.org/2004/07/CustomerCampaign.SOAP.Models.Requests")]
    public partial class AddCustomerRewardRq : object
    {
        
        private int AgentIdField;
        
        private int CustomerIdField;
        
        private decimal DiscountPercentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgentId
        {
            get
            {
                return this.AgentIdField;
            }
            set
            {
                this.AgentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId
        {
            get
            {
                return this.CustomerIdField;
            }
            set
            {
                this.CustomerIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiscountPercent
        {
            get
            {
                return this.DiscountPercentField;
            }
            set
            {
                this.DiscountPercentField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseBase", Namespace="http://schemas.datacontract.org/2004/07/CustomerCampaign.SOAP.Models.Responses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RewardService.AddCustomerRewardRs))]
    public partial class ResponseBase : object
    {
        
        private string ErrorMessageField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage
        {
            get
            {
                return this.ErrorMessageField;
            }
            set
            {
                this.ErrorMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success
        {
            get
            {
                return this.SuccessField;
            }
            set
            {
                this.SuccessField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddCustomerRewardRs", Namespace="http://schemas.datacontract.org/2004/07/CustomerCampaign.SOAP.Models.Responses")]
    public partial class AddCustomerRewardRs : RewardService.ResponseBase
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RewardService.IRewardService")]
    public interface IRewardService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRewardService/AddCustomerReward", ReplyAction="http://tempuri.org/IRewardService/AddCustomerRewardResponse")]
        RewardService.AddCustomerRewardRs AddCustomerReward(RewardService.AddCustomerRewardRq rq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRewardService/AddCustomerReward", ReplyAction="http://tempuri.org/IRewardService/AddCustomerRewardResponse")]
        System.Threading.Tasks.Task<RewardService.AddCustomerRewardRs> AddCustomerRewardAsync(RewardService.AddCustomerRewardRq rq);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IRewardServiceChannel : RewardService.IRewardService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class RewardServiceClient : System.ServiceModel.ClientBase<RewardService.IRewardService>, RewardService.IRewardService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public RewardServiceClient() : 
                base(RewardServiceClient.GetDefaultBinding(), RewardServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IRewardService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RewardServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(RewardServiceClient.GetBindingForEndpoint(endpointConfiguration), RewardServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RewardServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(RewardServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RewardServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(RewardServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RewardServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public RewardService.AddCustomerRewardRs AddCustomerReward(RewardService.AddCustomerRewardRq rq)
        {
            return base.Channel.AddCustomerReward(rq);
        }
        
        public System.Threading.Tasks.Task<RewardService.AddCustomerRewardRs> AddCustomerRewardAsync(RewardService.AddCustomerRewardRq rq)
        {
            return base.Channel.AddCustomerRewardAsync(rq);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IRewardService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IRewardService))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:7030/RewardService.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return RewardServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IRewardService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return RewardServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IRewardService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IRewardService,
        }
    }
}
